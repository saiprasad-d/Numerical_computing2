## Unit Testing:

Unit Testing is the first level of software testing where the smallest testable parts of a software are tested. This is used to validate that each unit of the software performs as designed.
test case:
A test case is a set of conditions which is used to determine whether a system under test works correctly.
test suite:
Test suite is a collection of testcases that are used to test a software program to show that it has some specified set of behaviours by executing the aggregated tests together.
test runner:
A test runner is a component which set up the execution of tests and provides the outcome to the user.
The unittest test framework is python’s xUnit style framework.

White Box Testing method is used for Unit testing. The developers are expected to write automated test scripts, which ensures that each and every section or a unit meets its design and behaves as expected.Unit testing makes your code future proof since you anticipate the cases where your code could potentially fail or produce a bug. Though you cannot predict all of the cases, you still address most of them.

Python's unit testing framework offers various features like :
1. Test automation
2. Sharing of setup and shutdown code for tests
3. Aggregating tests into collections
4. Independence of the tests from the reporting framework

The best ways to write unit tests for your code is to first start with a smallest testable unit your code could possibly have, then move on to other units and see how that smallest unit interacts with other units, this way you could build up a comprehensive unit test for your applications.

## Profiling Module:
Finding out why your program is slow by looking at its source code is a waste of time. It’s extremely hard to guess where a complex program is spending its time by just looking at the code.Python provides many excellent modules to measure the statistics of a program. This makes us know where the program is spending too much time and what to do inorder to optimize it. It is better to optimize the code inorder to increase the efficiency of a program. So, perform some standard tests to ensure optimization and we can improve the program inorder to increase the efficiency.

A profiler is a handy tool that will automatically time and count each execution of each piece of your code.

Using Timers:
Timers are easy to implement and they can be used anywhere at a program to measure the execution time. By using timers we can get the exact time and we can improve the program where it takes too long. Time module provides the methods inorder to profile a program.

Using line_profiler:
Python provides a built-in module to measure execution time and the module name is LineProfiler.It gives detailed report on time consumed by a program.

Using cProfile:
Python includes a built in module called cProfile which is used to measure the execution time of a program.cProfiler module provides all information about how long the program is executing and how many times the function get called in a program.
